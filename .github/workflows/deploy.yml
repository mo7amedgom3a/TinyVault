name: Deploy with Ansible

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Install Ansible
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      # 3️⃣ Configure SSH Key
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      # 4️⃣ Run Ansible Playbook with secret vars
      - name: Run Ansible Playbook
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          TINYVAULT_DB_URL: ${{ secrets.DB_URL || 'sqlite+aiosqlite:///./data/tinyvault.db' }}
          TINYVAULT_TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TINYVAULT_ADMIN_API_KEY: ${{ secrets.ADMIN_API_KEY }}
          TINYVAULT_WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          TINYVAULT_DEBUG: ${{ secrets.DEBUG || 'false' }}
          TINYVAULT_APP_NAME: ${{ secrets.APP_NAME || 'TinyVault' }}
        run: |
          cd ansible
          ansible-playbook -i inventory.yml playbook.yml -v

      # 5️⃣ Cleanup SSH key
      - name: Cleanup SSH key
        if: always()
        run: rm -f ~/.ssh/id_rsa
