---
- name: Deploy TinyVault app from GitHub with Docker
  hosts: tinyvault_prod
  become: yes
  gather_facts: no
  tasks:
    - name: Clean up problematic Docker repository
      raw: |
        sudo yum-config-manager --disable docker-ce-stable || true
        sudo rm -f /etc/yum.repos.d/docker-ce.repo || true
      changed_when: false

    - name: Update yum cache
      raw: sudo yum update -y
      changed_when: false

    - name: Install required packages
      raw: |
        sudo yum install -y yum-utils device-mapper-persistent-data lvm2 wget unzip --allowerasing
      changed_when: false

    - name: Install Docker for Amazon Linux
      raw: |
        sudo yum install -y docker
        sudo service docker start
        sudo chkconfig docker on
        sudo groupadd docker || true
        sudo usermod -a -G docker ec2-user
      changed_when: false

    - name: Install Docker Compose
      raw: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
      changed_when: false

    - name: Create application directory
      raw: sudo mkdir -p /opt/tinyvault && sudo chown ec2-user:ec2-user /opt/tinyvault
      changed_when: false

    - name: Download project from GitHub
      raw: |
        cd /opt
        wget https://github.com/mo7amedgom3a/TinyVault/archive/refs/heads/main.zip
        unzip main.zip
        # copy the content of TinyVault-main to /opt/tinyvault
        sudo cp -r TinyVault-main/* /opt/tinyvault/
        rm -rf TinyVault-main main.zip
      changed_when: false
    - name: Create .env file for docker-compose
      copy:
        dest: /opt/tinyvault/.env
        content: |
          DB_URL={{ DB_URL | default('sqlite+aiosqlite:///./data/tinyvault.db') }}
          TELEGRAM_BOT_TOKEN={{ TELEGRAM_BOT_TOKEN }}
          ADMIN_API_KEY={{ ADMIN_API_KEY }}
          WEBHOOK_SECRET={{ WEBHOOK_SECRET }}
          EC2_HOST={{ EC2_HOST | default('localhost') }}
          APP_NAME={{ APP_NAME | default('TinyVault') }}
  
    - name: Run docker Compose
      shell: |
        cd /opt/tinyvault
        docker-compose build \
          --build-arg ADMIN_API_KEY="{{ ADMIN_API_KEY }}" \
          --build-arg DB_URL="{{ DB_URL }}" \
          --build-arg TELEGRAM_BOT_TOKEN="{{ TELEGRAM_BOT_TOKEN }}" \
          --build-arg WEBHOOK_SECRET="{{ WEBHOOK_SECRET }}" \
          --build-arg EC2_HOST="{{ EC2_HOST }}" \
          --build-arg APP_NAME="{{ APP_NAME }}"
        docker-compose up -d
        

    - name: Wait for container to be ready
      pause:
        seconds: 10